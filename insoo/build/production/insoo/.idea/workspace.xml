<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="8b0f1a7f-9455-491f-8ee2-bb2ebcbe3765" name="Changes" comment="##########제목##########&#10;[bfs] 재활(숨바꼭질5)&#10;##########본문##########&#10;&#10;##########푸터##########&#10;&#10;##########&#10;# 1. Commit Message Structure&#10;# 기본적으로 커밋 메세지는 아래와 같이 제목/본문/꼬리말로 구성한다.&#10;##########&#10;# type: subject&#10;#&#10;# body&#10;# &#10;# footer&#10;##########&#10;# 2. Commit Type&#10;# ex) [Front | Back | Hadoop]⚡add: 새로운 기능 추가&#10;##########&#10;#[]⚡add : 새로운 기능 추가&#10;#[]🔄update : 기능 수정&#10;#[]🛠️fix : 버그 수정&#10;#[]📘docs : 문서 수정&#10;#[]✨style : 코드 포맷팅, 세미콜론 누락, 코드 변경이 없는 경우&#10;#[]♻️refactor : 코드 리펙토링&#10;#[]⛑️test : 테스트 코드, 리펙토링 테스트 코드 추가&#10;#[]🧹chore : 빌드 업무 수정, 패키지 매니저 수정&#10;#[]🏗️build : 프로젝트 빌드, 의존성 추가, 빌드 툴 변경사항이 있는 경우&#10;##########&#10;# 3. footer&#10;# Issue Tracker를 사용하기 위해 해당 Issue 번호를 등록한다.&#10;##########&#10;# #1&#10;##########">
      <change afterPath="$PROJECT_DIR$/_2023/_0104/Main_9328_열쇠_G1.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/_2023/_0116/Solution_이진변환반복하기_L2.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/_2023/_0125/Solution_영어끝말잇기_L2.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/production/insoo/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/build/production/insoo/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2HrHXu8Tj0epQcn1Sa0ZpTxev12" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;SONARLINT_PRECOMMIT_ANALYSIS&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;jdk.selected.JAVA_MODULE&quot;: &quot;azul-11&quot;,
    &quot;last_opened_file_path&quot;: &quot;D:/external/java-to-kotlin-starter-guide/build.gradle&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RunManager" selected="Application.Solution_영어끝말잇기_L2">
    <configuration name="Main_11967_불켜기_G2" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="_2023._0102.Main_11967_불켜기_G2" />
      <module name="insoo" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="_2023._0102.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Main_17071_숨바꼭질5_P5" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="_2023._0103.Main_17071_숨바꼭질5_P5" />
      <module name="insoo" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="_2023._0103.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Main_9328_열쇠_G1" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="_2023._0104.Main_9328_열쇠_G1" />
      <module name="insoo" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="_2023._0104.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Solution_이진변환반복하기_L2" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="_2023._0116.Solution_이진변환반복하기_L2" />
      <module name="insoo" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="_2023._0116.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Solution_영어끝말잇기_L2" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="_2023._0125.Solution_영어끝말잇기_L2" />
      <module name="insoo" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="_2023._0125.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.Solution_영어끝말잇기_L2" />
        <item itemvalue="Application.Solution_이진변환반복하기_L2" />
        <item itemvalue="Application.Main_9328_열쇠_G1" />
        <item itemvalue="Application.Main_17071_숨바꼭질5_P5" />
        <item itemvalue="Application.Main_11967_불켜기_G2" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="8b0f1a7f-9455-491f-8ee2-bb2ebcbe3765" name="Changes" comment="" />
      <created>1669036325051</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1669036325051</updated>
      <workItem from="1669036326787" duration="4370000" />
      <workItem from="1669134880979" duration="4353000" />
      <workItem from="1669292681225" duration="132000" />
      <workItem from="1669297956022" duration="8560000" />
      <workItem from="1669423185669" duration="360000" />
      <workItem from="1669722232406" duration="2488000" />
      <workItem from="1670042016077" duration="33000" />
      <workItem from="1670927084797" duration="2212000" />
      <workItem from="1670942422171" duration="315000" />
      <workItem from="1672017590016" duration="5795000" />
      <workItem from="1672027505006" duration="971000" />
      <workItem from="1672028677783" duration="965000" />
      <workItem from="1672099632098" duration="8229000" />
      <workItem from="1672184469280" duration="8006000" />
      <workItem from="1672273358348" duration="4998000" />
      <workItem from="1672361615141" duration="5422000" />
      <workItem from="1672478504879" duration="838000" />
      <workItem from="1672481816358" duration="11370000" />
      <workItem from="1672616550889" duration="8250000" />
      <workItem from="1672704267733" duration="7617000" />
      <workItem from="1672797631856" duration="9654000" />
      <workItem from="1672923948964" duration="3640000" />
      <workItem from="1673862210837" duration="6056000" />
      <workItem from="1674636004229" duration="1381000" />
    </task>
    <task id="LOCAL-00001" summary="##########제목##########&#10;[스택]재활훈련&#10;##########본문##########&#10;&#10;##########푸터##########&#10;&#10;##########&#10;# 1. Commit Message Structure&#10;# 기본적으로 커밋 메세지는 아래와 같이 제목/본문/꼬리말로 구성한다.&#10;##########&#10;# type: subject&#10;#&#10;# body&#10;# &#10;# footer&#10;##########&#10;# 2. Commit Type&#10;# ex) [Front | Back | Hadoop]⚡add: 새로운 기능 추가&#10;##########&#10;#[]⚡add : 새로운 기능 추가&#10;#[]🔄update : 기능 수정&#10;#[]🛠️fix : 버그 수정&#10;#[]📘docs : 문서 수정&#10;#[]✨style : 코드 포맷팅, 세미콜론 누락, 코드 변경이 없는 경우&#10;#[]♻️refactor : 코드 리펙토링&#10;#[]⛑️test : 테스트 코드, 리펙토링 테스트 코드 추가&#10;#[]🧹chore : 빌드 업무 수정, 패키지 매니저 수정&#10;#[]🏗️build : 프로젝트 빌드, 의존성 추가, 빌드 툴 변경사항이 있는 경우&#10;##########&#10;# 3. footer&#10;# Issue Tracker를 사용하기 위해 해당 Issue 번호를 등록한다.&#10;##########&#10;# #1&#10;##########">
      <created>1669142484610</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1669142484610</updated>
    </task>
    <task id="LOCAL-00002" summary="##########제목##########&#10;[BFS] 재활운동&#10;##########본문##########&#10;&#10;##########푸터##########&#10;&#10;##########&#10;# 1. Commit Message Structure&#10;# 기본적으로 커밋 메세지는 아래와 같이 제목/본문/꼬리말로 구성한다.&#10;##########&#10;# type: subject&#10;#&#10;# body&#10;# &#10;# footer&#10;##########&#10;# 2. Commit Type&#10;# ex) [Front | Back | Hadoop]⚡add: 새로운 기능 추가&#10;##########&#10;#[]⚡add : 새로운 기능 추가&#10;#[]🔄update : 기능 수정&#10;#[]🛠️fix : 버그 수정&#10;#[]📘docs : 문서 수정&#10;#[]✨style : 코드 포맷팅, 세미콜론 누락, 코드 변경이 없는 경우&#10;#[]♻️refactor : 코드 리펙토링&#10;#[]⛑️test : 테스트 코드, 리펙토링 테스트 코드 추가&#10;#[]🧹chore : 빌드 업무 수정, 패키지 매니저 수정&#10;#[]🏗️build : 프로젝트 빌드, 의존성 추가, 빌드 툴 변경사항이 있는 경우&#10;##########&#10;# 3. footer&#10;# Issue Tracker를 사용하기 위해 해당 Issue 번호를 등록한다.&#10;##########&#10;# #1&#10;##########">
      <created>1669725202472</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1669725202472</updated>
    </task>
    <task id="LOCAL-00003" summary="##########제목##########&#10;[BTrack] 재활&#10;##########본문##########&#10;&#10;##########푸터##########&#10;&#10;##########&#10;# 1. Commit Message Structure&#10;# 기본적으로 커밋 메세지는 아래와 같이 제목/본문/꼬리말로 구성한다.&#10;##########&#10;# type: subject&#10;#&#10;# body&#10;# &#10;# footer&#10;##########&#10;# 2. Commit Type&#10;# ex) [Front | Back | Hadoop]⚡add: 새로운 기능 추가&#10;##########&#10;#[]⚡add : 새로운 기능 추가&#10;#[]🔄update : 기능 수정&#10;#[]🛠️fix : 버그 수정&#10;#[]📘docs : 문서 수정&#10;#[]✨style : 코드 포맷팅, 세미콜론 누락, 코드 변경이 없는 경우&#10;#[]♻️refactor : 코드 리펙토링&#10;#[]⛑️test : 테스트 코드, 리펙토링 테스트 코드 추가&#10;#[]🧹chore : 빌드 업무 수정, 패키지 매니저 수정&#10;#[]🏗️build : 프로젝트 빌드, 의존성 추가, 빌드 툴 변경사항이 있는 경우&#10;##########&#10;# 3. footer&#10;# Issue Tracker를 사용하기 위해 해당 Issue 번호를 등록한다.&#10;##########&#10;# #1&#10;##########">
      <created>1670942703778</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1670942703778</updated>
    </task>
    <task id="LOCAL-00004" summary="##########제목##########&#10;[dfs] 재활 훈련(로또)&#10;##########본문##########&#10;&#10;##########푸터##########&#10;&#10;##########&#10;# 1. Commit Message Structure&#10;# 기본적으로 커밋 메세지는 아래와 같이 제목/본문/꼬리말로 구성한다.&#10;##########&#10;# type: subject&#10;#&#10;# body&#10;# &#10;# footer&#10;##########&#10;# 2. Commit Type&#10;# ex) [Front | Back | Hadoop]⚡add: 새로운 기능 추가&#10;##########&#10;#[]⚡add : 새로운 기능 추가&#10;#[]🔄update : 기능 수정&#10;#[]🛠️fix : 버그 수정&#10;#[]📘docs : 문서 수정&#10;#[]✨style : 코드 포맷팅, 세미콜론 누락, 코드 변경이 없는 경우&#10;#[]♻️refactor : 코드 리펙토링&#10;#[]⛑️test : 테스트 코드, 리펙토링 테스트 코드 추가&#10;#[]🧹chore : 빌드 업무 수정, 패키지 매니저 수정&#10;#[]🏗️build : 프로젝트 빌드, 의존성 추가, 빌드 툴 변경사항이 있는 경우&#10;##########&#10;# 3. footer&#10;# Issue Tracker를 사용하기 위해 해당 Issue 번호를 등록한다.&#10;##########&#10;# #1&#10;##########">
      <created>1672019943182</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1672019943182</updated>
    </task>
    <task id="LOCAL-00005" summary="##########제목##########&#10;[dfs] 재활 훈련(암호만들기)&#10;##########본문##########&#10;&#10;##########푸터##########&#10;&#10;##########&#10;# 1. Commit Message Structure&#10;# 기본적으로 커밋 메세지는 아래와 같이 제목/본문/꼬리말로 구성한다.&#10;##########&#10;# type: subject&#10;#&#10;# body&#10;# &#10;# footer&#10;##########&#10;# 2. Commit Type&#10;# ex) [Front | Back | Hadoop]⚡add: 새로운 기능 추가&#10;##########&#10;#[]⚡add : 새로운 기능 추가&#10;#[]🔄update : 기능 수정&#10;#[]🛠️fix : 버그 수정&#10;#[]📘docs : 문서 수정&#10;#[]✨style : 코드 포맷팅, 세미콜론 누락, 코드 변경이 없는 경우&#10;#[]♻️refactor : 코드 리펙토링&#10;#[]⛑️test : 테스트 코드, 리펙토링 테스트 코드 추가&#10;#[]🧹chore : 빌드 업무 수정, 패키지 매니저 수정&#10;#[]🏗️build : 프로젝트 빌드, 의존성 추가, 빌드 툴 변경사항이 있는 경우&#10;##########&#10;# 3. footer&#10;# Issue Tracker를 사용하기 위해 해당 Issue 번호를 등록한다.&#10;##########&#10;# #1&#10;##########">
      <created>1672023715876</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1672023715876</updated>
    </task>
    <task id="LOCAL-00006" summary="##########제목##########&#10;[dfs] 재활(소문난칠공주-극한 최적화)&#10;##########본문##########&#10;&#10;##########푸터##########&#10;&#10;##########&#10;# 1. Commit Message Structure&#10;# 기본적으로 커밋 메세지는 아래와 같이 제목/본문/꼬리말로 구성한다.&#10;##########&#10;# type: subject&#10;#&#10;# body&#10;# &#10;# footer&#10;##########&#10;# 2. Commit Type&#10;# ex) [Front | Back | Hadoop]⚡add: 새로운 기능 추가&#10;##########&#10;#[]⚡add : 새로운 기능 추가&#10;#[]🔄update : 기능 수정&#10;#[]🛠️fix : 버그 수정&#10;#[]📘docs : 문서 수정&#10;#[]✨style : 코드 포맷팅, 세미콜론 누락, 코드 변경이 없는 경우&#10;#[]♻️refactor : 코드 리펙토링&#10;#[]⛑️test : 테스트 코드, 리펙토링 테스트 코드 추가&#10;#[]🧹chore : 빌드 업무 수정, 패키지 매니저 수정&#10;#[]🏗️build : 프로젝트 빌드, 의존성 추가, 빌드 툴 변경사항이 있는 경우&#10;##########&#10;# 3. footer&#10;# Issue Tracker를 사용하기 위해 해당 Issue 번호를 등록한다.&#10;##########&#10;# #1&#10;##########">
      <created>1672111378674</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1672111378674</updated>
    </task>
    <task id="LOCAL-00007" summary="##########제목##########&#10;[bfs] 재활훈련(벽부이2)&#10;##########본문##########&#10;&#10;##########푸터##########&#10;&#10;##########&#10;# 1. Commit Message Structure&#10;# 기본적으로 커밋 메세지는 아래와 같이 제목/본문/꼬리말로 구성한다.&#10;##########&#10;# type: subject&#10;#&#10;# body&#10;# &#10;# footer&#10;##########&#10;# 2. Commit Type&#10;# ex) [Front | Back | Hadoop]⚡add: 새로운 기능 추가&#10;##########&#10;#[]⚡add : 새로운 기능 추가&#10;#[]🔄update : 기능 수정&#10;#[]🛠️fix : 버그 수정&#10;#[]📘docs : 문서 수정&#10;#[]✨style : 코드 포맷팅, 세미콜론 누락, 코드 변경이 없는 경우&#10;#[]♻️refactor : 코드 리펙토링&#10;#[]⛑️test : 테스트 코드, 리펙토링 테스트 코드 추가&#10;#[]🧹chore : 빌드 업무 수정, 패키지 매니저 수정&#10;#[]🏗️build : 프로젝트 빌드, 의존성 추가, 빌드 툴 변경사항이 있는 경우&#10;##########&#10;# 3. footer&#10;# Issue Tracker를 사용하기 위해 해당 Issue 번호를 등록한다.&#10;##########&#10;# #1&#10;##########">
      <created>1672196528573</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1672196528573</updated>
    </task>
    <task id="LOCAL-00008" summary="##########제목##########&#10;[bfs] 재활(벽부이3)&#10;##########본문##########&#10;&#10;##########푸터##########&#10;&#10;##########&#10;# 1. Commit Message Structure&#10;# 기본적으로 커밋 메세지는 아래와 같이 제목/본문/꼬리말로 구성한다.&#10;##########&#10;# type: subject&#10;#&#10;# body&#10;# &#10;# footer&#10;##########&#10;# 2. Commit Type&#10;# ex) [Front | Back | Hadoop]⚡add: 새로운 기능 추가&#10;##########&#10;#[]⚡add : 새로운 기능 추가&#10;#[]🔄update : 기능 수정&#10;#[]🛠️fix : 버그 수정&#10;#[]📘docs : 문서 수정&#10;#[]✨style : 코드 포맷팅, 세미콜론 누락, 코드 변경이 없는 경우&#10;#[]♻️refactor : 코드 리펙토링&#10;#[]⛑️test : 테스트 코드, 리펙토링 테스트 코드 추가&#10;#[]🧹chore : 빌드 업무 수정, 패키지 매니저 수정&#10;#[]🏗️build : 프로젝트 빌드, 의존성 추가, 빌드 툴 변경사항이 있는 경우&#10;##########&#10;# 3. footer&#10;# Issue Tracker를 사용하기 위해 해당 Issue 번호를 등록한다.&#10;##########&#10;# #1&#10;##########">
      <created>1672410638323</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1672410638323</updated>
    </task>
    <task id="LOCAL-00009" summary="##########제목##########&#10;[bfs] 재활(확장게임)&#10;##########본문##########&#10;&#10;##########푸터##########&#10;&#10;##########&#10;# 1. Commit Message Structure&#10;# 기본적으로 커밋 메세지는 아래와 같이 제목/본문/꼬리말로 구성한다.&#10;##########&#10;# type: subject&#10;#&#10;# body&#10;# &#10;# footer&#10;##########&#10;# 2. Commit Type&#10;# ex) [Front | Back | Hadoop]⚡add: 새로운 기능 추가&#10;##########&#10;#[]⚡add : 새로운 기능 추가&#10;#[]🔄update : 기능 수정&#10;#[]🛠️fix : 버그 수정&#10;#[]📘docs : 문서 수정&#10;#[]✨style : 코드 포맷팅, 세미콜론 누락, 코드 변경이 없는 경우&#10;#[]♻️refactor : 코드 리펙토링&#10;#[]⛑️test : 테스트 코드, 리펙토링 테스트 코드 추가&#10;#[]🧹chore : 빌드 업무 수정, 패키지 매니저 수정&#10;#[]🏗️build : 프로젝트 빌드, 의존성 추가, 빌드 툴 변경사항이 있는 경우&#10;##########&#10;# 3. footer&#10;# Issue Tracker를 사용하기 위해 해당 Issue 번호를 등록한다.&#10;##########&#10;# #1&#10;##########">
      <created>1672517593130</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1672517593130</updated>
    </task>
    <task id="LOCAL-00010" summary="##########제목##########&#10;[bfs] 재활(불켜기)&#10;##########본문##########&#10;&#10;##########푸터##########&#10;&#10;##########&#10;# 1. Commit Message Structure&#10;# 기본적으로 커밋 메세지는 아래와 같이 제목/본문/꼬리말로 구성한다.&#10;##########&#10;# type: subject&#10;#&#10;# body&#10;# &#10;# footer&#10;##########&#10;# 2. Commit Type&#10;# ex) [Front | Back | Hadoop]⚡add: 새로운 기능 추가&#10;##########&#10;#[]⚡add : 새로운 기능 추가&#10;#[]🔄update : 기능 수정&#10;#[]🛠️fix : 버그 수정&#10;#[]📘docs : 문서 수정&#10;#[]✨style : 코드 포맷팅, 세미콜론 누락, 코드 변경이 없는 경우&#10;#[]♻️refactor : 코드 리펙토링&#10;#[]⛑️test : 테스트 코드, 리펙토링 테스트 코드 추가&#10;#[]🧹chore : 빌드 업무 수정, 패키지 매니저 수정&#10;#[]🏗️build : 프로젝트 빌드, 의존성 추가, 빌드 툴 변경사항이 있는 경우&#10;##########&#10;# 3. footer&#10;# Issue Tracker를 사용하기 위해 해당 Issue 번호를 등록한다.&#10;##########&#10;# #1&#10;##########">
      <created>1672633868017</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1672633868017</updated>
    </task>
    <task id="LOCAL-00011" summary="##########제목##########&#10;[bfs] 재활(숨바꼭질5)&#10;##########본문##########&#10;&#10;##########푸터##########&#10;&#10;##########&#10;# 1. Commit Message Structure&#10;# 기본적으로 커밋 메세지는 아래와 같이 제목/본문/꼬리말로 구성한다.&#10;##########&#10;# type: subject&#10;#&#10;# body&#10;# &#10;# footer&#10;##########&#10;# 2. Commit Type&#10;# ex) [Front | Back | Hadoop]⚡add: 새로운 기능 추가&#10;##########&#10;#[]⚡add : 새로운 기능 추가&#10;#[]🔄update : 기능 수정&#10;#[]🛠️fix : 버그 수정&#10;#[]📘docs : 문서 수정&#10;#[]✨style : 코드 포맷팅, 세미콜론 누락, 코드 변경이 없는 경우&#10;#[]♻️refactor : 코드 리펙토링&#10;#[]⛑️test : 테스트 코드, 리펙토링 테스트 코드 추가&#10;#[]🧹chore : 빌드 업무 수정, 패키지 매니저 수정&#10;#[]🏗️build : 프로젝트 빌드, 의존성 추가, 빌드 툴 변경사항이 있는 경우&#10;##########&#10;# 3. footer&#10;# Issue Tracker를 사용하기 위해 해당 Issue 번호를 등록한다.&#10;##########&#10;# #1&#10;##########">
      <created>1672715771908</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1672715771908</updated>
    </task>
    <option name="localTasksCounter" value="12" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="##########제목##########&#10;[스택]재활훈련&#10;##########본문##########&#10;&#10;##########푸터##########&#10;&#10;##########&#10;# 1. Commit Message Structure&#10;# 기본적으로 커밋 메세지는 아래와 같이 제목/본문/꼬리말로 구성한다.&#10;##########&#10;# type: subject&#10;#&#10;# body&#10;# &#10;# footer&#10;##########&#10;# 2. Commit Type&#10;# ex) [Front | Back | Hadoop]⚡add: 새로운 기능 추가&#10;##########&#10;#[]⚡add : 새로운 기능 추가&#10;#[]update : 기능 수정&#10;#[]️fix : 버그 수정&#10;#[]docs : 문서 수정&#10;#[]✨style : 코드 포맷팅, 세미콜론 누락, 코드 변경이 없는 경우&#10;#[]♻️refactor : 코드 리펙토링&#10;#[]⛑️test : 테스트 코드, 리펙토링 테스트 코드 추가&#10;#[]chore : 빌드 업무 수정, 패키지 매니저 수정&#10;#[]️build : 프로젝트 빌드, 의존성 추가, 빌드 툴 변경사항이 있는 경우&#10;##########&#10;# 3. footer&#10;# Issue Tracker를 사용하기 위해 해당 Issue 번호를 등록한다.&#10;##########&#10;# #1&#10;##########" />
    <MESSAGE value="##########제목##########&#10;[BFS] 재활운동&#10;##########본문##########&#10;&#10;##########푸터##########&#10;&#10;##########&#10;# 1. Commit Message Structure&#10;# 기본적으로 커밋 메세지는 아래와 같이 제목/본문/꼬리말로 구성한다.&#10;##########&#10;# type: subject&#10;#&#10;# body&#10;# &#10;# footer&#10;##########&#10;# 2. Commit Type&#10;# ex) [Front | Back | Hadoop]⚡add: 새로운 기능 추가&#10;##########&#10;#[]⚡add : 새로운 기능 추가&#10;#[]update : 기능 수정&#10;#[]️fix : 버그 수정&#10;#[]docs : 문서 수정&#10;#[]✨style : 코드 포맷팅, 세미콜론 누락, 코드 변경이 없는 경우&#10;#[]♻️refactor : 코드 리펙토링&#10;#[]⛑️test : 테스트 코드, 리펙토링 테스트 코드 추가&#10;#[]chore : 빌드 업무 수정, 패키지 매니저 수정&#10;#[]️build : 프로젝트 빌드, 의존성 추가, 빌드 툴 변경사항이 있는 경우&#10;##########&#10;# 3. footer&#10;# Issue Tracker를 사용하기 위해 해당 Issue 번호를 등록한다.&#10;##########&#10;# #1&#10;##########" />
    <MESSAGE value="##########제목##########&#10;[BTrack] 재활&#10;##########본문##########&#10;&#10;##########푸터##########&#10;&#10;##########&#10;# 1. Commit Message Structure&#10;# 기본적으로 커밋 메세지는 아래와 같이 제목/본문/꼬리말로 구성한다.&#10;##########&#10;# type: subject&#10;#&#10;# body&#10;# &#10;# footer&#10;##########&#10;# 2. Commit Type&#10;# ex) [Front | Back | Hadoop]⚡add: 새로운 기능 추가&#10;##########&#10;#[]⚡add : 새로운 기능 추가&#10;#[]update : 기능 수정&#10;#[]️fix : 버그 수정&#10;#[]docs : 문서 수정&#10;#[]✨style : 코드 포맷팅, 세미콜론 누락, 코드 변경이 없는 경우&#10;#[]♻️refactor : 코드 리펙토링&#10;#[]⛑️test : 테스트 코드, 리펙토링 테스트 코드 추가&#10;#[]chore : 빌드 업무 수정, 패키지 매니저 수정&#10;#[]️build : 프로젝트 빌드, 의존성 추가, 빌드 툴 변경사항이 있는 경우&#10;##########&#10;# 3. footer&#10;# Issue Tracker를 사용하기 위해 해당 Issue 번호를 등록한다.&#10;##########&#10;# #1&#10;##########" />
    <MESSAGE value="##########제목##########&#10;[dfs] 재활 훈련(로또)&#10;##########본문##########&#10;&#10;##########푸터##########&#10;&#10;##########&#10;# 1. Commit Message Structure&#10;# 기본적으로 커밋 메세지는 아래와 같이 제목/본문/꼬리말로 구성한다.&#10;##########&#10;# type: subject&#10;#&#10;# body&#10;# &#10;# footer&#10;##########&#10;# 2. Commit Type&#10;# ex) [Front | Back | Hadoop]⚡add: 새로운 기능 추가&#10;##########&#10;#[]⚡add : 새로운 기능 추가&#10;#[]update : 기능 수정&#10;#[]️fix : 버그 수정&#10;#[]docs : 문서 수정&#10;#[]✨style : 코드 포맷팅, 세미콜론 누락, 코드 변경이 없는 경우&#10;#[]♻️refactor : 코드 리펙토링&#10;#[]⛑️test : 테스트 코드, 리펙토링 테스트 코드 추가&#10;#[]chore : 빌드 업무 수정, 패키지 매니저 수정&#10;#[]️build : 프로젝트 빌드, 의존성 추가, 빌드 툴 변경사항이 있는 경우&#10;##########&#10;# 3. footer&#10;# Issue Tracker를 사용하기 위해 해당 Issue 번호를 등록한다.&#10;##########&#10;# #1&#10;##########" />
    <MESSAGE value="##########제목##########&#10;[dfs] 재활 훈련(암호만들기)&#10;##########본문##########&#10;&#10;##########푸터##########&#10;&#10;##########&#10;# 1. Commit Message Structure&#10;# 기본적으로 커밋 메세지는 아래와 같이 제목/본문/꼬리말로 구성한다.&#10;##########&#10;# type: subject&#10;#&#10;# body&#10;# &#10;# footer&#10;##########&#10;# 2. Commit Type&#10;# ex) [Front | Back | Hadoop]⚡add: 새로운 기능 추가&#10;##########&#10;#[]⚡add : 새로운 기능 추가&#10;#[]update : 기능 수정&#10;#[]️fix : 버그 수정&#10;#[]docs : 문서 수정&#10;#[]✨style : 코드 포맷팅, 세미콜론 누락, 코드 변경이 없는 경우&#10;#[]♻️refactor : 코드 리펙토링&#10;#[]⛑️test : 테스트 코드, 리펙토링 테스트 코드 추가&#10;#[]chore : 빌드 업무 수정, 패키지 매니저 수정&#10;#[]️build : 프로젝트 빌드, 의존성 추가, 빌드 툴 변경사항이 있는 경우&#10;##########&#10;# 3. footer&#10;# Issue Tracker를 사용하기 위해 해당 Issue 번호를 등록한다.&#10;##########&#10;# #1&#10;##########" />
    <MESSAGE value="##########제목##########&#10;[dfs] 재활(소문난칠공주-극한 최적화)&#10;##########본문##########&#10;&#10;##########푸터##########&#10;&#10;##########&#10;# 1. Commit Message Structure&#10;# 기본적으로 커밋 메세지는 아래와 같이 제목/본문/꼬리말로 구성한다.&#10;##########&#10;# type: subject&#10;#&#10;# body&#10;# &#10;# footer&#10;##########&#10;# 2. Commit Type&#10;# ex) [Front | Back | Hadoop]⚡add: 새로운 기능 추가&#10;##########&#10;#[]⚡add : 새로운 기능 추가&#10;#[]update : 기능 수정&#10;#[]️fix : 버그 수정&#10;#[]docs : 문서 수정&#10;#[]✨style : 코드 포맷팅, 세미콜론 누락, 코드 변경이 없는 경우&#10;#[]♻️refactor : 코드 리펙토링&#10;#[]⛑️test : 테스트 코드, 리펙토링 테스트 코드 추가&#10;#[]chore : 빌드 업무 수정, 패키지 매니저 수정&#10;#[]️build : 프로젝트 빌드, 의존성 추가, 빌드 툴 변경사항이 있는 경우&#10;##########&#10;# 3. footer&#10;# Issue Tracker를 사용하기 위해 해당 Issue 번호를 등록한다.&#10;##########&#10;# #1&#10;##########" />
    <MESSAGE value="##########제목##########&#10;[bfs] 재활훈련(벽부이2)&#10;##########본문##########&#10;&#10;##########푸터##########&#10;&#10;##########&#10;# 1. Commit Message Structure&#10;# 기본적으로 커밋 메세지는 아래와 같이 제목/본문/꼬리말로 구성한다.&#10;##########&#10;# type: subject&#10;#&#10;# body&#10;# &#10;# footer&#10;##########&#10;# 2. Commit Type&#10;# ex) [Front | Back | Hadoop]⚡add: 새로운 기능 추가&#10;##########&#10;#[]⚡add : 새로운 기능 추가&#10;#[]update : 기능 수정&#10;#[]️fix : 버그 수정&#10;#[]docs : 문서 수정&#10;#[]✨style : 코드 포맷팅, 세미콜론 누락, 코드 변경이 없는 경우&#10;#[]♻️refactor : 코드 리펙토링&#10;#[]⛑️test : 테스트 코드, 리펙토링 테스트 코드 추가&#10;#[]chore : 빌드 업무 수정, 패키지 매니저 수정&#10;#[]️build : 프로젝트 빌드, 의존성 추가, 빌드 툴 변경사항이 있는 경우&#10;##########&#10;# 3. footer&#10;# Issue Tracker를 사용하기 위해 해당 Issue 번호를 등록한다.&#10;##########&#10;# #1&#10;##########" />
    <MESSAGE value="##########제목##########&#10;[bfs] 재활(벽부이3)&#10;##########본문##########&#10;&#10;##########푸터##########&#10;&#10;##########&#10;# 1. Commit Message Structure&#10;# 기본적으로 커밋 메세지는 아래와 같이 제목/본문/꼬리말로 구성한다.&#10;##########&#10;# type: subject&#10;#&#10;# body&#10;# &#10;# footer&#10;##########&#10;# 2. Commit Type&#10;# ex) [Front | Back | Hadoop]⚡add: 새로운 기능 추가&#10;##########&#10;#[]⚡add : 새로운 기능 추가&#10;#[]update : 기능 수정&#10;#[]️fix : 버그 수정&#10;#[]docs : 문서 수정&#10;#[]✨style : 코드 포맷팅, 세미콜론 누락, 코드 변경이 없는 경우&#10;#[]♻️refactor : 코드 리펙토링&#10;#[]⛑️test : 테스트 코드, 리펙토링 테스트 코드 추가&#10;#[]chore : 빌드 업무 수정, 패키지 매니저 수정&#10;#[]️build : 프로젝트 빌드, 의존성 추가, 빌드 툴 변경사항이 있는 경우&#10;##########&#10;# 3. footer&#10;# Issue Tracker를 사용하기 위해 해당 Issue 번호를 등록한다.&#10;##########&#10;# #1&#10;##########" />
    <MESSAGE value="##########제목##########&#10;[bfs] 재활(확장게임)&#10;##########본문##########&#10;&#10;##########푸터##########&#10;&#10;##########&#10;# 1. Commit Message Structure&#10;# 기본적으로 커밋 메세지는 아래와 같이 제목/본문/꼬리말로 구성한다.&#10;##########&#10;# type: subject&#10;#&#10;# body&#10;# &#10;# footer&#10;##########&#10;# 2. Commit Type&#10;# ex) [Front | Back | Hadoop]⚡add: 새로운 기능 추가&#10;##########&#10;#[]⚡add : 새로운 기능 추가&#10;#[]update : 기능 수정&#10;#[]️fix : 버그 수정&#10;#[]docs : 문서 수정&#10;#[]✨style : 코드 포맷팅, 세미콜론 누락, 코드 변경이 없는 경우&#10;#[]♻️refactor : 코드 리펙토링&#10;#[]⛑️test : 테스트 코드, 리펙토링 테스트 코드 추가&#10;#[]chore : 빌드 업무 수정, 패키지 매니저 수정&#10;#[]️build : 프로젝트 빌드, 의존성 추가, 빌드 툴 변경사항이 있는 경우&#10;##########&#10;# 3. footer&#10;# Issue Tracker를 사용하기 위해 해당 Issue 번호를 등록한다.&#10;##########&#10;# #1&#10;##########" />
    <MESSAGE value="##########제목##########&#10;[bfs] 재활(불켜기)&#10;##########본문##########&#10;&#10;##########푸터##########&#10;&#10;##########&#10;# 1. Commit Message Structure&#10;# 기본적으로 커밋 메세지는 아래와 같이 제목/본문/꼬리말로 구성한다.&#10;##########&#10;# type: subject&#10;#&#10;# body&#10;# &#10;# footer&#10;##########&#10;# 2. Commit Type&#10;# ex) [Front | Back | Hadoop]⚡add: 새로운 기능 추가&#10;##########&#10;#[]⚡add : 새로운 기능 추가&#10;#[]update : 기능 수정&#10;#[]️fix : 버그 수정&#10;#[]docs : 문서 수정&#10;#[]✨style : 코드 포맷팅, 세미콜론 누락, 코드 변경이 없는 경우&#10;#[]♻️refactor : 코드 리펙토링&#10;#[]⛑️test : 테스트 코드, 리펙토링 테스트 코드 추가&#10;#[]chore : 빌드 업무 수정, 패키지 매니저 수정&#10;#[]️build : 프로젝트 빌드, 의존성 추가, 빌드 툴 변경사항이 있는 경우&#10;##########&#10;# 3. footer&#10;# Issue Tracker를 사용하기 위해 해당 Issue 번호를 등록한다.&#10;##########&#10;# #1&#10;##########" />
    <MESSAGE value="##########제목##########&#10;[bfs] 재활(숨바꼭질5)&#10;##########본문##########&#10;&#10;##########푸터##########&#10;&#10;##########&#10;# 1. Commit Message Structure&#10;# 기본적으로 커밋 메세지는 아래와 같이 제목/본문/꼬리말로 구성한다.&#10;##########&#10;# type: subject&#10;#&#10;# body&#10;# &#10;# footer&#10;##########&#10;# 2. Commit Type&#10;# ex) [Front | Back | Hadoop]⚡add: 새로운 기능 추가&#10;##########&#10;#[]⚡add : 새로운 기능 추가&#10;#[]update : 기능 수정&#10;#[]️fix : 버그 수정&#10;#[]docs : 문서 수정&#10;#[]✨style : 코드 포맷팅, 세미콜론 누락, 코드 변경이 없는 경우&#10;#[]♻️refactor : 코드 리펙토링&#10;#[]⛑️test : 테스트 코드, 리펙토링 테스트 코드 추가&#10;#[]chore : 빌드 업무 수정, 패키지 매니저 수정&#10;#[]️build : 프로젝트 빌드, 의존성 추가, 빌드 툴 변경사항이 있는 경우&#10;##########&#10;# 3. footer&#10;# Issue Tracker를 사용하기 위해 해당 Issue 번호를 등록한다.&#10;##########&#10;# #1&#10;##########" />
    <option name="LAST_COMMIT_MESSAGE" value="##########제목##########&#10;[bfs] 재활(숨바꼭질5)&#10;##########본문##########&#10;&#10;##########푸터##########&#10;&#10;##########&#10;# 1. Commit Message Structure&#10;# 기본적으로 커밋 메세지는 아래와 같이 제목/본문/꼬리말로 구성한다.&#10;##########&#10;# type: subject&#10;#&#10;# body&#10;# &#10;# footer&#10;##########&#10;# 2. Commit Type&#10;# ex) [Front | Back | Hadoop]⚡add: 새로운 기능 추가&#10;##########&#10;#[]⚡add : 새로운 기능 추가&#10;#[]update : 기능 수정&#10;#[]️fix : 버그 수정&#10;#[]docs : 문서 수정&#10;#[]✨style : 코드 포맷팅, 세미콜론 누락, 코드 변경이 없는 경우&#10;#[]♻️refactor : 코드 리펙토링&#10;#[]⛑️test : 테스트 코드, 리펙토링 테스트 코드 추가&#10;#[]chore : 빌드 업무 수정, 패키지 매니저 수정&#10;#[]️build : 프로젝트 빌드, 의존성 추가, 빌드 툴 변경사항이 있는 경우&#10;##########&#10;# 3. footer&#10;# Issue Tracker를 사용하기 위해 해당 Issue 번호를 등록한다.&#10;##########&#10;# #1&#10;##########" />
  </component>
</project>